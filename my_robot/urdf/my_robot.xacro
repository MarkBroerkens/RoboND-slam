<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="my_robot">
  <xacro:include filename="$(find my_robot)/urdf/my_robot.gazebo" />
  
  <!-- Scale the robot size to fit the environment -->
  <xacro:property name="scale" value="1.0" />

  <xacro:property name="chassis_width" value="${scale * 0.20}" />
  <xacro:property name="chassis_length" value="${scale * 0.20}" />
  <xacro:property name="chassis_height" value="${scale * 0.05}" />
  <xacro:property name="chassis_mass" value="${scale * 0.1}" />

  <xacro:property name="camera_width" value="${scale * 0.02}" />
  <xacro:property name="camera_length" value="${scale * 0.02}" />
  <xacro:property name="camera_height" value="${scale * 0.02}" />
  <xacro:property name="camera_mass" value="${scale * 0.02}" />
  
  <xacro:property name="wheel_length" value="${scale * 0.02}" />
  <xacro:property name="wheel_radius" value="${scale * 0.05}" />
  <xacro:property name="wheel_mass" value="${scale * .05}" />
  <xacro:property name="wheel_inertia" value="${scale * 1e-3}" />
  <xacro:property name="wheel_separation" value="${chassis_width + wheel_length + 2*0.005*scale}" />
  <xacro:property name="wheel_base" value="${scale * 0.32}" />
  <xacro:property name="wheel_y_offset" value="${wheel_separation/2}" />

  <xacro:property name="caster_wheel_radius" value="${(wheel_radius - chassis_height/2)/2}"/>
  <xacro:property name="caster_wheel_joint_offset" value="-${chassis_length/2-caster_wheel_radius}"/>
 

 <!--All units in m-kg-s-radians unit system -->
  <xacro:property name="M_PI" value="3.1415926535897931" />
  <xacro:property name="M_PI_2" value="1.570796327" />
  <xacro:property name="DEG_TO_RAD" value="0.017453293" />


  <xacro:macro name="sphere_inertia" params="m r">
    <inertial>
      <mass value="${m}"/>
      <inertia ixx="${2.0*m*(r*r)/5.0}" ixy="0.0" ixz="0.0" iyy="${2.0*m*(r*r)/5.0}" iyz="0.0" izz="${2.0*m*(r*r)/5.0}"/>
    </inertial>
  </xacro:macro>

<xacro:macro name="cylinder_inertia" params="m r h">
    <inertial>
      <mass value="${m}"/>
      <inertia ixx="${m*(3*r*r+h*h)/12}" ixy = "0" ixz = "0" iyy="${m*(3*r*r+h*h)/12}" iyz = "0" izz="${m*r*r/2}"/> 
    </inertial>
  </xacro:macro>


 <xacro:macro name="wheel" params="lr parent translateX translateY"> <!--lr: left, right -->
    <link name="${lr}_wheel">
      <visual>
        <origin xyz="0 0 0" rpy="0 1.5707 1.5707" /> 
        <geometry>
          <cylinder length="${wheel_length}" radius="${wheel_radius}" />
        </geometry>
        <material name="DarkGray" />
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 1.5707 1.5707" />
        <geometry>
          <cylinder length="${wheel_length}" radius="${wheel_radius}" />
        </geometry>
      </collision>
      <xacro:cylinder_inertia m="10" r="${wheel_radius}" h="${wheel_length}"/>
    </link>


    <joint name="${lr}_wheel_joint" type="continuous">
      <parent link="${parent}"/>
      <child link="${lr}_wheel"/>
      <origin xyz="${translateX} ${translateY} 0" rpy="0 0 0" /> 
      <axis xyz="0 1 0" rpy="0 0 0" />
      <limit effort="100" velocity="100"/>
      <joint_properties damping="0.0" friction="0.0"/>
    </joint>
   
  </xacro:macro>
  


  <gazebo reference="camera">
    <material>Gazebo/Black</material>
  </gazebo>

  <gazebo reference="chassis">
    <material>Gazebo/Blue</material>
  </gazebo>


  <link name="robot_footprint"/>
  <joint name="robot_footprint_joint" type="fixed">
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <parent link="robot_footprint"/>
    <child link="chassis"/>
  </joint>



  <!-- camera -->
  <link name="camera">
    <inertial>
      <mass value="${camera_mass}"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
    </inertial>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="${camera_length} ${camera_width} ${camera_height}"/>
      </geometry>
    </collision>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="${camera_length} ${camera_width} ${camera_height}"/>
      </geometry>
    </visual>
  </link>
 
  <!-- lidar -->
  <link name="hokuyo">
    <inertial>
      <mass value="1e-5"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
    </inertial>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size=".1 .1 .1"/>
      </geometry>
    </collision>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <mesh filename="package://my_robot/meshes/hokuyo.dae"/>
      </geometry>
    </visual>
  </link>


  <!--- chassis -->
  <link name="chassis">
    <pose>0 0 0.1 0 0 0</pose>
    <inertial>
      <mass value="${chassis_mass}"/>
      <origin xyz="0.0 0 0" rpy=" 0 0 0"/>
      <inertia ixx="0.1" ixy="0" ixz="0" iyy="0.1" iyz="0" izz="0.1"/>
    </inertial>
    <collision name="collision">
      <origin xyz="0 0 0" rpy=" 0 0 0"/>
      <geometry>
        <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
      </geometry>
    </collision>
    <visual name="chassis_visual">
      <origin xyz="0 0 0" rpy=" 0 0 0"/>
      <geometry>
        <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
      </geometry>
    </visual>
  </link>



 
   <link name="caster_wheel">
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <sphere radius="${caster_wheel_radius}"/>
      </geometry>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <sphere radius="${caster_wheel_radius}"/>
      </geometry>
      <surface>
            <friction>
              <ode>
                <mu>0.000000</mu>
                <mu2>0.000000</mu2>
                <slip1>1.000000</slip1>
                <slip2>1.000000</slip2>
              </ode>
            </friction>
          </surface>
    </collision>
    <xacro:sphere_inertia m="5" r="${caster_wheel_radius}"/>
  </link>
 
  <joint name="caster_wheel_joint" type="continuous">
    <axis xyz="0 1 0" rpy="0 0 0" />
    <parent link="chassis"/>
    <child link="caster_wheel"/>
    <origin xyz="${caster_wheel_joint_offset} 0 -${caster_wheel_radius+chassis_height/2}" rpy="0 0 0"/>
  </joint>
 
 

  <joint type="fixed" name="camera_joint">
    <origin xyz="${chassis_length/2 - camera_length} 0 ${chassis_height/2 + camera_height/2}" rpy="0 0 0"/>
    <child link="camera"/>
    <parent link="chassis"/>
    <axis xyz="0 1 0" rpy="0 0 0"/>
  </joint>
  <joint type="fixed" name="hokuyo_joint">
    <origin xyz="0 0 0.06" rpy="0 0 0"/>
    <child link="hokuyo"/>
    <parent link="chassis"/>
    <axis xyz="0 1 0" rpy="0 0 0"/>
  </joint>

  <joint name="camera_optical_joint" type="fixed">
    <origin xyz="0 0 0" rpy="-1.5707 0 -1.5707"/>
    <parent link="camera"/>
    <child link="camera_link_optical"/>
  </joint>

  <link name="camera_link_optical">
  </link>



  <xacro:wheel lr="right" parent="chassis" translateX="${chassis_length/2-wheel_radius}" translateY="-${wheel_y_offset}"/>
  <xacro:wheel lr="left" parent="chassis" translateX="${chassis_length/2-wheel_radius}" translateY="${wheel_y_offset}"/>
  
</robot>
